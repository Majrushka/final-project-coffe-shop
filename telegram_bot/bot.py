import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from django.conf import settings

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = settings.TELEGRAM_BOT_TOKEN
API_URL = 'http://localhost:8000/api/customer-orders/'

class CoffeeShopBot:
    def __init__(self):
        self.application = Application.builder().token(BOT_TOKEN).build()
        self.setup_handlers()
    
    def setup_handlers(self):
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        welcome_text = """
‚òïÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∫–æ—Ñ–µ–π–Ω–∏!

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—à–∏—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–∞—Ö –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
+79123456789 (–†–æ—Å—Å–∏—è)
+375291234567 (–ë–µ–ª–∞—Ä—É—Å—å)
80291234567 (–ë–µ–ª–∞—Ä—É—Å—å)
89123456789 (–†–æ—Å—Å–∏—è)

–Ø –ø–æ–∫–∞–∂—É –≤–∞–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–∫–∞–∑–æ–≤! üì¶
        """
        await update.message.reply_text(welcome_text)
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_message = update.message.text.strip()
        chat_id = update.message.chat_id
        
        print(f"üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{user_message}' –æ—Ç {chat_id}")
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        phone_number = self.normalize_phone_number(user_message)
        if not phone_number:
            await update.message.reply_text(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
                "+79123456789 (–†–æ—Å—Å–∏—è)\n"
                "+375291234567 (–ë–µ–ª–∞—Ä—É—Å—å)\n"
                "80291234567 (–ë–µ–ª–∞—Ä—É—Å—å)\n"
                "89123456789 (–†–æ—Å—Å–∏—è)"
            )
            return
        
        print(f"üîç –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}")
        
        # –ó–∞–ø—Ä–æ—Å –∫ API
        try:
            response = requests.post(
                API_URL,
                json={
                    'phone_number': phone_number,
                    'telegram_chat_id': chat_id
                },
                headers={'Content-Type': 'application/json'},
                timeout=10
            )
            
            print(f"üì° API Response: {response.status_code}")
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(data.get('orders', []))}")
                await self.send_orders_response(update, data)
            elif response.status_code == 404:
                await update.message.reply_text(
                    f"üì≠ –ó–∞–∫–∞–∑—ã –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {phone_number} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
                )
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.text}")
                await update.message.reply_text(
                    f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                )
                
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—â–µ–Ω Django —Å–µ—Ä–≤–µ—Ä."
            )
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            await update.message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞."
            )
    
    async def send_orders_response(self, update: Update, data):
        orders = data.get('orders', [])
        
        if not orders:
            await update.message.reply_text(
                f"üì≠ –ó–∞–∫–∞–∑—ã –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {data.get('phone_number')} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
            )
            return
        
        response_text = f"üì¶ –í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã ({len(orders)} –∏–∑ 5):\n\n"
        
        for order in orders:
            response_text += f"üÜî –ó–∞–∫–∞–∑ #{order['order_id']}\n"
            response_text += f"üìÖ {order['created_at']}\n"
            response_text += f"üìä –°—Ç–∞—Ç—É—Å: {order['status']}\n"
            response_text += f"üí≥ –°—É–º–º–∞: {order['total_price']} —Ä—É–±.\n"
            response_text += "üìã –°–æ—Å—Ç–∞–≤:\n"
            
            for item in order['items']:
                response_text += f"   ‚Ä¢ {item['product_name']} - {item['quantity']} —à—Ç. x {item['unit_price']} —Ä—É–±.\n"
            
            response_text += "\n" + "="*40 + "\n\n"
        
        if len(response_text) > 4096:
            parts = [response_text[i:i+4096] for i in range(0, len(response_text), 4096)]
            for part in parts:
                await update.message.reply_text(part)
        else:
            await update.message.reply_text(response_text)
    
    def normalize_phone_number(self, phone):
        """–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∏ –±–µ–ª–æ—Ä—É—Å—Å–∫–∏—Ö –Ω–æ–º–µ—Ä–æ–≤)"""
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ +
        phone = ''.join(c for c in phone if c.isdigit() or c == '+')
        
        print(f"üîß –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞: {phone}")
        
        # –†–æ—Å—Å–∏–π—Å–∫–∏–µ –Ω–æ–º–µ—Ä–∞
        if phone.startswith('8') and len(phone) == 11:
            result = '+7' + phone[1:]
        elif phone.startswith('7') and len(phone) == 11:
            result = '+' + phone
        elif phone.startswith('+7') and len(phone) == 12:
            result = phone
        
        # –ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–µ –Ω–æ–º–µ—Ä–∞
        elif phone.startswith('80') and len(phone) == 11:  # 8029...
            result = '+375' + phone[2:]
        elif phone.startswith('375') and len(phone) == 12:
            result = '+' + phone
        elif phone.startswith('+375') and len(phone) == 13:
            result = phone
        
        else:
            result = None
        
        print(f"üîß –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏: {result}")
        return result
    
    def run(self):
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        print(f"üîë –¢–æ–∫–µ–Ω: {BOT_TOKEN}")
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
            self.application.run_polling(
                allowed_updates=Update.ALL_TYPES,
                drop_pending_updates=True,
                close_loop=False
        )
        except Exception as e:
            print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            print("üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
            print("   - –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
            print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º")
# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = CoffeeShopBot()